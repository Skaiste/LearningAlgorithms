package testing;

import org.junit.Test;

import sorting.*;

import static org.junit.Assert.*;

import java.awt.event.FocusAdapter;
import java.util.ArrayList;
import java.util.concurrent.ThreadLocalRandom;

public class TestingSorting {

	@Test
	public void testInsertionSortIntArr() {
		testSmallIntArray(new InsertionSort());
		testMediumIntArray(new InsertionSort());
		testLargeIntArray(new InsertionSort());
	}
	
	@Test
	public void testMergeSortIntArr() {
		testSmallIntArray(new MergeSort());
		testMediumIntArray(new MergeSort());
		testLargeIntArray(new MergeSort());
	}
	
	@Test
	public void testHeapSortIntArr() {
		testSmallIntArray(new HeapSort());
		testMediumIntArray(new HeapSort());
		testLargeIntArray(new HeapSort());
	}
	
	@Test
	public void testD_aryHeapSortIntArr(){
		testSmallIntArray(new D_aryHeapSort(5));
		testMediumIntArray(new D_aryHeapSort(5));
		testLargeIntArray(new D_aryHeapSort(5));
	}
	
	@Test
	public void testQuickSortIntArr() {
		testSmallIntArray(new QuickSort());
		testMediumIntArray(new QuickSort());
		testLargeIntArray(new QuickSort());
	}
	
	@Test
	public void testHeapify() {

		int[] a = {4, 1, 3, 2, 16, 9, 10, 14, 8, 7};
		int[] hA = {16, 14, 10, 8, 7, 9, 3, 2, 4, 1};
		
		ArrayList<Integer> array = fromArrayToAList(a);
		ArrayList<Integer> heapifiedArray = fromArrayToAList(hA);
		
		HeapSort heap = new HeapSort();
		heap.heapifyIntArray(array);
		assertEquals("Heapifying integer array has failed", array, heapifiedArray);
	}
	@Test
	public void testHeapExtractMax() {
		int[] a = {31, 41, 59, 26, 41, 58};
		ArrayList <Integer> array = fromArrayToAList(a);
		
		HeapSort heap = new HeapSort();
		
		assertEquals("Heap extract max has failed", 59, heap.heapExtractMax(array));
		
	}
	@Test
	public void testHeapInsert() {
		int[] a = {31, 41, 60, 26, 41, 58};
		int[] hA = {60, 41, 59, 26, 41, 31, 58};

		ArrayList<Integer> array = fromArrayToAList(a);
		ArrayList<Integer> heapifiedArray = fromArrayToAList(hA);
		
		HeapSort heap = new HeapSort();
		heap.heapInsert(array, 59);
		
		assertEquals("Heapifying integer array has failed", array, heapifiedArray);
	}
	
	private void testSmallIntArray(Sorting sorting){
		int[] a = {9, 59, 35, 59, 38, 72, 14, 92, 82, 79};
		int[] sA = {9, 14, 35, 38, 59, 59, 72, 79, 82, 92};
		
		ArrayList<Integer> array = fromArrayToAList(a);
		ArrayList<Integer> sortedArray = fromArrayToAList(sA);
		
		testIntArray(sorting, array, sortedArray);
	}
	private void testMediumIntArray(Sorting sorting){
		int[] a = {760, 676, 366, 955, 141, 114, 690, 884, 658, 99, 383, 401, 464, 
					929, 56, 881, 939, 249, 775, 450, 288, 484, 895, 89, 818, 421, 
					691, 871, 695, 828, 721, 265, 451, 26, 32, 145, 875, 305, 636, 
					472, 160, 364, 998, 291, 54, 849, 117, 527, 376, 430, 421, 782, 
					534, 911, 820, 280, 820, 920, 817, 219, 539, 555, 8, 172, 826, 
					539, 657, 464, 815, 714, 531, 305, 182, 450, 835, 214, 747, 677, 
					548, 725, 52, 237, 933, 877, 731, 214, 422, 75, 857, 782, 715, 
					218, 661, 604, 453, 402, 934, 409, 404, 562};
		int[] sA = {8, 26, 32, 52, 54, 56, 75, 89, 99, 114, 117, 141, 145, 160, 172, 
					182, 214, 214, 218, 219, 237, 249, 265, 280, 288, 291, 305, 305, 
					364, 366, 376, 383, 401, 402, 404, 409, 421, 421, 422, 430, 450, 
					450, 451, 453, 464, 464, 472, 484, 527, 531, 534, 539, 539, 548, 
					555, 562, 604, 636, 657, 658, 661, 676, 677, 690, 691, 695, 714, 
					715, 721, 725, 731, 747, 760, 775, 782, 782, 815, 817, 818, 820, 
					820, 826, 828, 835, 849, 857, 871, 875, 877, 881, 884, 895, 911, 
					920, 929, 933, 934, 939, 955, 998};
		
		ArrayList<Integer> array = fromArrayToAList(a);
		ArrayList<Integer> sortedArray = fromArrayToAList(sA);
		
		testIntArray(sorting, array, sortedArray);
	}
	@SuppressWarnings("unchecked")
	private void testIntArray(Sorting sorting, ArrayList<Integer> array, ArrayList<Integer> sortedArray){

		// testing sorting of an unsorted array
		sorting.sortIntArray(array);
		assertEquals("Sorting integer array has failed", sortedArray, array);
		// testing sorting sorted array
		array = (ArrayList<Integer>) sortedArray.clone();
		sorting.sortIntArray(array);
		assertEquals("Sorting integer array has failed", sortedArray, array);
	}
	
	private ArrayList<Integer> fromArrayToAList(int[] a){
		ArrayList<Integer> arrayList = new ArrayList<Integer>();
		for (int i: a)
			arrayList.add(i);
		return arrayList;
	}
	
	private ArrayList<Integer> randomArray(int size, int from, int to){
		ArrayList<Integer> array = new ArrayList<Integer>();
		
		for (int i = 0; i < size; i++)
			array.add(ThreadLocalRandom.current().nextInt(from,to));
		
		return array;
	}
	
	@SuppressWarnings("unused")
	private void printIntArray(int[] a){
		for (int i:a)
			System.out.print(i + " ");
		System.out.println();
	}

	private void testLargeIntArray(Sorting sorting){
		int[] a = {3684, 6225, 8115, 1838, 9059, 67, 688, 6831, 5758, 8222, 9346, 8657, 4963, 4210, 9295, 
					763, 1276, 6555, 1467, 1213, 6489, 7756, 9156, 4357, 6138, 5978, 7051, 6405, 5126, 7690, 
					1412, 5819, 7077, 6587, 707, 4675, 1249, 7048, 6258, 1912, 3552, 4757, 8460, 8104, 7759, 
					5049, 618, 9077, 2440, 4789, 7633, 5556, 6098, 2711, 958, 7688, 2727, 6856, 1872, 1910, 6806, 
					2307, 3517, 1134, 6782, 7925, 1464, 7676, 860, 2992, 8120, 957, 491, 807, 1413, 1482, 8299, 
					4675, 1440, 1790, 10, 8599, 2572, 2681, 4193, 9982, 3103, 3031, 8343, 8173, 2762, 525, 2908, 
					8122, 5278, 8882, 8822, 9279, 9646, 539, 1870, 459, 9781, 771, 4953, 2244, 6274, 7859, 9687, 
					8351, 3857, 8109, 7001, 4978, 1327, 2700, 3610, 5742, 2324, 8480, 1602, 264, 712, 3896, 4756, 
					4685, 2037, 2598, 6307, 3370, 4380, 4142, 8342, 393, 9143, 9507, 5569, 8105, 5100, 4005, 7220, 
					4079, 2303, 7072, 5829, 8224, 3941, 3745, 2483, 8991, 3575, 8529, 6734, 8678, 7155, 1932, 6216, 
					1565, 3636, 1718, 7038, 2683, 7324, 7189, 5381, 3677, 7017, 6760, 482, 9115, 6577, 8974, 6861, 
					5965, 2660, 9112, 7343, 9688, 9280, 8052, 4801, 5898, 8524, 4031, 2874, 8431, 3554, 162, 1719, 
					2334, 1631, 7779, 4302, 2564, 1772, 9213, 7652, 3837, 346, 1900, 8906, 3126, 6460, 2996, 9201, 
					4650, 9394, 1641, 6336, 9327, 9055, 1314, 9770, 4192, 352, 3611, 3272, 6125, 4241, 3535, 6917, 
					9255, 7910, 3118, 1646, 9774, 2152, 8123, 959, 8120, 8857, 6101, 165, 602, 4920, 8636, 5619, 
					4383, 4178, 1157, 1571, 7076, 5112, 7458, 2499, 4478, 964, 3723, 5374, 9523, 1031, 2373, 9899, 
					4088, 2776, 3592, 7132, 7846, 2730, 8784, 2084, 9225, 3926, 2037, 9920, 8799, 5933, 3008, 7705, 
					4128, 8649, 1318, 1508, 7212, 5402, 8346, 6538, 5112, 6454, 5362, 7336, 7622, 1179, 6775, 1772, 
					6334, 4577, 656, 6932, 6230, 132, 836, 1707, 8344, 6503, 1674, 5465, 7150, 3269, 787, 3747, 4162, 
					1494, 8233, 4117, 6169, 2079, 3746, 6891, 1837, 3804, 5906, 3590, 6938, 4109, 3206, 8723, 6546, 
					6989, 2238, 5542, 3454, 538, 7295, 2827, 4372, 5636, 4088, 6660, 715, 5800, 6196, 7633, 4310, 
					3567, 7847, 9875, 9655, 5766, 3636, 8343, 3876, 7213, 8984, 8861, 422, 4152, 86, 1410, 4140, 
					7003, 2361, 9871, 5177, 4291, 669, 2676, 1514, 7559, 9967, 8892, 1332, 1021, 8259, 2270, 625, 
					2095, 6217, 3174, 1185, 1917, 5171, 9835, 5044, 9947, 5393, 2923, 2852, 4354, 7406, 7543, 2730, 
					5508, 8831, 8238, 9592, 1333, 4055, 3948, 5681, 844, 955, 1507, 1284, 3108, 5944, 2601, 7427, 
					2904, 7997, 5936, 9574, 6076, 5281, 8469, 2252, 9983, 5351, 7310, 1941, 6353, 8701, 7764, 9687, 
					4892, 6151, 2419, 8799, 2004, 3367, 2798, 3839, 7400, 4072, 5774, 28, 8009, 1523, 9358, 5871, 
					2835, 16, 8560, 379, 5630, 9567, 4918, 7488, 8838, 1165, 6881, 3969, 7966, 7174, 3892, 8927, 
					1626, 5172, 2362, 9968, 367, 9472, 6022, 8565, 8448, 6272, 7721, 8913, 6030, 9877, 3088, 6122, 
					5258, 3952, 4910, 7441, 2632, 6909, 185, 5188, 7189, 7354, 6774, 5705, 1714, 6612, 8945, 5730, 
					5819, 9829, 6182, 3347, 9878, 5921, 4066, 975, 3735, 648, 381, 5056, 5765, 7870, 1509, 7926, 
					7002, 6926, 5638, 6221, 377, 1964, 2706, 1456, 3359, 5268, 2085, 1207, 7093, 4420, 1322, 258, 
					2341, 4595, 2000, 27, 5535, 3454, 7682, 4902, 9580, 8545, 3780, 183, 5329, 9996, 8455, 90, 8861, 
					6358, 7795, 1585, 6640, 2877, 3922, 8255, 4693, 9836, 4023, 770, 4908, 4327, 4298, 6242, 7007, 
					4561, 3939, 9674, 7829, 6849, 2449, 6329, 2564, 4886, 3483, 7236, 8841, 9321, 6051, 6299, 2572, 
					6027, 5281, 8313, 3387, 9848, 5880, 5706, 848, 2902, 4931, 4898, 6175, 718, 1516, 4243, 6902, 
					7002, 2619, 5789, 3909, 4272, 981, 733, 9742, 7438, 4342, 2452, 2756, 3311, 1566, 4999, 1086, 
					7236, 2704, 7956, 3807, 9720, 9474, 5665, 6820, 2322, 8432, 2427, 7425, 5911, 8993, 8958, 8239, 
					4858, 8910, 978, 9564, 5224, 3821, 5091, 5250, 7024, 7674, 7120, 9568, 1472, 582, 29, 6928, 4550, 
					1700, 3935, 8090, 7375, 4298, 6699, 4507, 8613, 632, 4825, 3634, 4368, 2446, 4312, 1957, 5482, 
					5113, 1937, 90, 7938, 6470, 2246, 1979, 2571, 4584, 2195, 5657, 9190, 5770, 8803, 2551, 9948, 
					9095, 2709, 8720, 8739, 6673, 6363, 829, 5447, 7682, 1522, 5325, 2607, 4786, 5086, 8894, 7567, 
					7560, 7600, 2808, 2268, 5952, 4443, 1231, 6881, 6435, 7160, 3234, 7657, 5006, 3260, 2760, 4466, 
					9500, 2414, 9283, 3179, 2316, 1271, 1700, 1822, 2276, 8647, 199, 4965, 5043, 5473, 8851, 7459, 
					2187, 4014, 4724, 6890, 4700, 7495, 8639, 7349, 5246, 6079, 5886, 6608, 323, 3707, 7608, 769, 
					1438, 1775, 2475, 1831, 2009, 1250, 3325, 3217, 2347, 1205, 2852, 8093, 6912, 3425, 6956, 8937, 
					7685, 7903, 4756, 6594, 9306, 1517, 2701, 2837, 8085, 4293, 5005, 7382, 4208, 4769, 2248, 4747, 
					7622, 9882, 1246, 2334, 6646, 3070, 6902, 8621, 8796, 996, 6662, 9192, 9770, 5502, 6036, 8255, 
					8346, 7625, 5011, 5444, 2217, 3370, 2841, 3696, 3691, 8772, 4305, 1735, 8505, 7633, 3381, 431, 
					8220, 6431, 3962, 1998, 9186, 4676, 3174, 1272, 4789, 2792, 4058, 8646, 9590, 3187, 5928, 6821, 
					6471, 7908, 8289, 791, 8564, 4263, 9121, 6548, 654, 8271, 9473, 912, 3209, 5807, 7355, 2097, 
					7155, 6733, 1914, 2156, 8380, 4340, 3719, 1828, 7395, 8579, 8088, 630, 9671, 3697, 5122, 8303, 
					2863, 5307, 1527, 8326, 7794, 2440, 3314, 5487, 3107, 5271, 3304, 7058, 6776, 6717, 1599, 6463, 
					8668, 8131, 3868, 1156, 6080, 5070, 6894, 7504, 3555, 3239, 4908, 3951, 9488, 4895, 4112, 6202, 
					474, 5633, 2781, 1496, 6585, 422, 8345, 9002, 8482, 7799, 4098, 8836, 1202, 5164, 3886, 2726, 
					6622, 7651, 4473, 6741, 2350, 5352, 5663, 1771, 3800, 6443, 1247, 2612, 2014, 3443, 8420, 99, 
					3823, 4740, 7565, 9911, 2668, 6020, 9840, 4380, 5484, 9801, 1653, 6934, 6695, 2264, 1906, 7971, 
					9540, 7721, 5763, 3325, 7654, 2985, 6330, 2387, 4531, 2159, 8486, 4259, 8423, 4833, 4603, 4276, 
					5870, 4485, 5957, 936, 1179, 1275, 1126, 401, 8804, 8632, 2971, 1587, 3277, 611, 622, 1554, 747, 
					7231, 8845, 6586, 1674, 5510, 5016, 8528, 212, 2064, 1749, 5958, 144, 3902, 758, 5125, 9724, 6843, 
					4435, 9136, 8220, 1918, 3037, 2195, 6693, 2803, 9029, 2767, 8110, 2567, 7048, 1427, 2741, 8808, 
					5028, 7967, 6712, 8575, 8848, 2319, 4631, 1202, 803, 4777, 2714, 5422, 9363, 7129, 1476, 5457, 
					4809, 9293, 1767, 8159, 3342, 8319};
		
		int[] sA = {10, 16, 27, 28, 29, 67, 86, 90, 90, 99, 132, 144, 162, 165, 183, 185, 199, 212, 258, 264, 323, 
				346, 352, 367, 377, 379, 381, 393, 401, 422, 422, 431, 459, 474, 482, 491, 525, 538, 539, 582, 602, 
				611, 618, 622, 625, 630, 632, 648, 654, 656, 669, 688, 707, 712, 715, 718, 733, 747, 758, 763, 769, 
				770, 771, 787, 791, 803, 807, 829, 836, 844, 848, 860, 912, 936, 955, 957, 958, 959, 964, 975, 978, 
				981, 996, 1021, 1031, 1086, 1126, 1134, 1156, 1157, 1165, 1179, 1179, 1185, 1202, 1202, 1205, 1207, 
				1213, 1231, 1246, 1247, 1249, 1250, 1271, 1272, 1275, 1276, 1284, 1314, 1318, 1322, 1327, 1332, 1333, 
				1410, 1412, 1413, 1427, 1438, 1440, 1456, 1464, 1467, 1472, 1476, 1482, 1494, 1496, 1507, 1508, 1509, 
				1514, 1516, 1517, 1522, 1523, 1527, 1554, 1565, 1566, 1571, 1585, 1587, 1599, 1602, 1626, 1631, 1641, 
				1646, 1653, 1674, 1674, 1700, 1700, 1707, 1714, 1718, 1719, 1735, 1749, 1767, 1771, 1772, 1772, 1775, 
				1790, 1822, 1828, 1831, 1837, 1838, 1870, 1872, 1900, 1906, 1910, 1912, 1914, 1917, 1918, 1932, 1937, 
				1941, 1957, 1964, 1979, 1998, 2000, 2004, 2009, 2014, 2037, 2037, 2064, 2079, 2084, 2085, 2095, 2097, 
				2152, 2156, 2159, 2187, 2195, 2195, 2217, 2238, 2244, 2246, 2248, 2252, 2264, 2268, 2270, 2276, 2303, 
				2307, 2316, 2319, 2322, 2324, 2334, 2334, 2341, 2347, 2350, 2361, 2362, 2373, 2387, 2414, 2419, 2427, 
				2440, 2440, 2446, 2449, 2452, 2475, 2483, 2499, 2551, 2564, 2564, 2567, 2571, 2572, 2572, 2598, 2601, 
				2607, 2612, 2619, 2632, 2660, 2668, 2676, 2681, 2683, 2700, 2701, 2704, 2706, 2709, 2711, 2714, 2726, 
				2727, 2730, 2730, 2741, 2756, 2760, 2762, 2767, 2776, 2781, 2792, 2798, 2803, 2808, 2827, 2835, 2837, 
				2841, 2852, 2852, 2863, 2874, 2877, 2902, 2904, 2908, 2923, 2971, 2985, 2992, 2996, 3008, 3031, 3037, 
				3070, 3088, 3103, 3107, 3108, 3118, 3126, 3174, 3174, 3179, 3187, 3206, 3209, 3217, 3234, 3239, 3260, 
				3269, 3272, 3277, 3304, 3311, 3314, 3325, 3325, 3342, 3347, 3359, 3367, 3370, 3370, 3381, 3387, 3425, 
				3443, 3454, 3454, 3483, 3517, 3535, 3552, 3554, 3555, 3567, 3575, 3590, 3592, 3610, 3611, 3634, 3636, 
				3636, 3677, 3684, 3691, 3696, 3697, 3707, 3719, 3723, 3735, 3745, 3746, 3747, 3780, 3800, 3804, 3807, 
				3821, 3823, 3837, 3839, 3857, 3868, 3876, 3886, 3892, 3896, 3902, 3909, 3922, 3926, 3935, 3939, 3941, 
				3948, 3951, 3952, 3962, 3969, 4005, 4014, 4023, 4031, 4055, 4058, 4066, 4072, 4079, 4088, 4088, 4098, 
				4109, 4112, 4117, 4128, 4140, 4142, 4152, 4162, 4178, 4192, 4193, 4208, 4210, 4241, 4243, 4259, 4263, 
				4272, 4276, 4291, 4293, 4298, 4298, 4302, 4305, 4310, 4312, 4327, 4340, 4342, 4354, 4357, 4368, 4372, 
				4380, 4380, 4383, 4420, 4435, 4443, 4466, 4473, 4478, 4485, 4507, 4531, 4550, 4561, 4577, 4584, 4595, 
				4603, 4631, 4650, 4675, 4675, 4676, 4685, 4693, 4700, 4724, 4740, 4747, 4756, 4756, 4757, 4769, 4777, 
				4786, 4789, 4789, 4801, 4809, 4825, 4833, 4858, 4886, 4892, 4895, 4898, 4902, 4908, 4908, 4910, 4918, 
				4920, 4931, 4953, 4963, 4965, 4978, 4999, 5005, 5006, 5011, 5016, 5028, 5043, 5044, 5049, 5056, 5070, 
				5086, 5091, 5100, 5112, 5112, 5113, 5122, 5125, 5126, 5164, 5171, 5172, 5177, 5188, 5224, 5246, 5250, 
				5258, 5268, 5271, 5278, 5281, 5281, 5307, 5325, 5329, 5351, 5352, 5362, 5374, 5381, 5393, 5402, 5422, 
				5444, 5447, 5457, 5465, 5473, 5482, 5484, 5487, 5502, 5508, 5510, 5535, 5542, 5556, 5569, 5619, 5630, 
				5633, 5636, 5638, 5657, 5663, 5665, 5681, 5705, 5706, 5730, 5742, 5758, 5763, 5765, 5766, 5770, 5774, 
				5789, 5800, 5807, 5819, 5819, 5829, 5870, 5871, 5880, 5886, 5898, 5906, 5911, 5921, 5928, 5933, 5936, 
				5944, 5952, 5957, 5958, 5965, 5978, 6020, 6022, 6027, 6030, 6036, 6051, 6076, 6079, 6080, 6098, 6101, 
				6122, 6125, 6138, 6151, 6169, 6175, 6182, 6196, 6202, 6216, 6217, 6221, 6225, 6230, 6242, 6258, 6272, 
				6274, 6299, 6307, 6329, 6330, 6334, 6336, 6353, 6358, 6363, 6405, 6431, 6435, 6443, 6454, 6460, 6463, 
				6470, 6471, 6489, 6503, 6538, 6546, 6548, 6555, 6577, 6585, 6586, 6587, 6594, 6608, 6612, 6622, 6640, 
				6646, 6660, 6662, 6673, 6693, 6695, 6699, 6712, 6717, 6733, 6734, 6741, 6760, 6774, 6775, 6776, 6782, 
				6806, 6820, 6821, 6831, 6843, 6849, 6856, 6861, 6881, 6881, 6890, 6891, 6894, 6902, 6902, 6909, 6912, 
				6917, 6926, 6928, 6932, 6934, 6938, 6956, 6989, 7001, 7002, 7002, 7003, 7007, 7017, 7024, 7038, 7048, 
				7048, 7051, 7058, 7072, 7076, 7077, 7093, 7120, 7129, 7132, 7150, 7155, 7155, 7160, 7174, 7189, 7189, 
				7212, 7213, 7220, 7231, 7236, 7236, 7295, 7310, 7324, 7336, 7343, 7349, 7354, 7355, 7375, 7382, 7395, 
				7400, 7406, 7425, 7427, 7438, 7441, 7458, 7459, 7488, 7495, 7504, 7543, 7559, 7560, 7565, 7567, 7600, 
				7608, 7622, 7622, 7625, 7633, 7633, 7633, 7651, 7652, 7654, 7657, 7674, 7676, 7682, 7682, 7685, 7688, 
				7690, 7705, 7721, 7721, 7756, 7759, 7764, 7779, 7794, 7795, 7799, 7829, 7846, 7847, 7859, 7870, 7903, 
				7908, 7910, 7925, 7926, 7938, 7956, 7966, 7967, 7971, 7997, 8009, 8052, 8085, 8088, 8090, 8093, 8104, 
				8105, 8109, 8110, 8115, 8120, 8120, 8122, 8123, 8131, 8159, 8173, 8220, 8220, 8222, 8224, 8233, 8238, 
				8239, 8255, 8255, 8259, 8271, 8289, 8299, 8303, 8313, 8319, 8326, 8342, 8343, 8343, 8344, 8345, 8346, 
				8346, 8351, 8380, 8420, 8423, 8431, 8432, 8448, 8455, 8460, 8469, 8480, 8482, 8486, 8505, 8524, 8528, 
				8529, 8545, 8560, 8564, 8565, 8575, 8579, 8599, 8613, 8621, 8632, 8636, 8639, 8646, 8647, 8649, 8657, 
				8668, 8678, 8701, 8720, 8723, 8739, 8772, 8784, 8796, 8799, 8799, 8803, 8804, 8808, 8822, 8831, 8836, 
				8838, 8841, 8845, 8848, 8851, 8857, 8861, 8861, 8882, 8892, 8894, 8906, 8910, 8913, 8927, 8937, 8945, 
				8958, 8974, 8984, 8991, 8993, 9002, 9029, 9055, 9059, 9077, 9095, 9112, 9115, 9121, 9136, 9143, 9156, 
				9186, 9190, 9192, 9201, 9213, 9225, 9255, 9279, 9280, 9283, 9293, 9295, 9306, 9321, 9327, 9346, 9358, 
				9363, 9394, 9472, 9473, 9474, 9488, 9500, 9507, 9523, 9540, 9564, 9567, 9568, 9574, 9580, 9590, 9592, 
				9646, 9655, 9671, 9674, 9687, 9687, 9688, 9720, 9724, 9742, 9770, 9770, 9774, 9781, 9801, 9829, 9835, 
				9836, 9840, 9848, 9871, 9875, 9877, 9878, 9882, 9899, 9911, 9920, 9947, 9948, 9967, 9968, 9982, 9983, 
				9996};
		
		ArrayList<Integer> array = fromArrayToAList(a);
		ArrayList<Integer> sortedArray = fromArrayToAList(sA);
		
		testIntArray(sorting, array, sortedArray);
	}
	
}
